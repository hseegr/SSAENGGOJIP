spring.application.name=ssaeng-go-jip

# Proxy
server.forward-headers-strategy=framework

# PostgreSQL
spring.datasource.url=jdbc:postgresql://${POSTGRESQL_URL}?currentSchema=ssaeng-go-jip
spring.datasource.username=${POSTGRESQL_USERNAME}
spring.datasource.password=${POSTGRESQL_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.maximum-pool-size=30
spring.datasource.hikari.leak-detection-threshold=30000

# Hibernate JPA
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true

#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.use_sql_comments=true

#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.orm.jdbc.bind=TRACE
#logging.level.org.hibernate.orm.jdbc.extract=TRACE


# Swagger UI
springdoc.swagger-ui.path=/swagger-ui.html

# Redis
spring.redis.host=${REDIS_HOST}
spring.redis.port=6380

# JWT
spring.auth.jwt.secret-key=${JWT_SECRET_KEY}
spring.auth.jwt.access-token-expiry=3600000
spring.auth.jwt.refresh-token-expiry=604800000

# Kakao social login
spring.security.oauth2.client.registration.kakao.client-id=${KAKAO_CLIENT_ID}
spring.security.oauth2.client.registration.kakao.client-secret=${KAKAO_CLIENT_SECRET}
spring.security.oauth2.client.registration.kakao.redirect-uri=${KAKAO_REDIRECT_URL}
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me

# Naver social login
spring.security.oauth2.client.registration.naver.client-id=${NAVER_CLIENT_ID}
spring.security.oauth2.client.registration.naver.client-secret=${NAVER_CLIENT_SECRET}
spring.security.oauth2.client.registration.naver.redirect-uri=${NAVER_REDIRECT_URL}
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me

# Google social login
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REDIRECT_URL}
spring.security.oauth2.client.provider.google.token-uri=https://www.googleapis.com/oauth2/v4/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo

# Ssafy social login
spring.security.oauth2.client.registration.ssafy.client-id=${SSAFY_CLIENT_ID}
spring.security.oauth2.client.registration.ssafy.client-secret=${SSAFY_CLIENT_SECRET}
spring.security.oauth2.client.registration.ssafy.redirect-uri=${SSAFY_REDIRECT_URL}
spring.security.oauth2.client.provider.ssafy.token-uri=https://project.ssafy.com/ssafy/oauth2/token
spring.security.oauth2.client.provider.ssafy.user-info-uri=https://project.ssafy.com/ssafy/resources/userInfo

# Mail
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Mongo DB
spring.data.mongodb.uri=mongodb://${MONGODB_URL}

#GraphHopper
graphhopper.osm-file-path=${GRAPHHOPPER_OSM_FILE_PATH}
graphhopper.graph-cache-path=${GRAPHHOPPER_GRAPH_CACHE_PATH}